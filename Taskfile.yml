# https://taskfile.dev

version: "3"

vars:
  ROCK_NAME: example-temporal-worker_0.1_amd64.rock
  IMAGE_NAME: example-temporal-worker-rock:latest
  CONTAINER_NAME: example-temporal-worker
  APP_NAME: example-temporal-worker

tasks:
  default:
    desc: List all tasks
    cmds:
      - task: list

  list:
    desc: List all tasks
    silent: true
    cmds:
      - task --list-all

  lint:
    desc: Run linter
    cmds:
      - uv run ruff check

  format:
    desc: Run formatter
    cmds:
      - uv run ruff format

  run-worker:
    desc: Run the Temporal worker
    cmds:
      - uv run python -m temporal_worker.worker

  start-workflow:
    desc: Start a "Fake Replicate" Workflow
    cmds:
      - uv run python -m temporal_worker.python_scripts.start_workflow

  pack:
    desc: Pack the rock
    cmds:
      - rockcraft pack -v

  load-image-local:
    desc: Load the .rock image into local docker registry
    cmds:
      - |
        rockcraft.skopeo --insecure-policy copy oci-archive:{{.ROCK_NAME}} \
          docker-daemon:{{.IMAGE_NAME}}

  docker-run:
    desc: Run the rock image (with --network set to host)
    cmds:
      - docker run --rm -d --name {{.CONTAINER_NAME}} --network host {{.IMAGE_NAME}}

  docker-exec:
    desc: Exec into the running container
    cmds:
      - docker exec -it {{.CONTAINER_NAME}} bash

  docker-cleanup:
    desc: Cleanup docker container and image
    cmds:
      - docker stop {{.CONTAINER_NAME}} || echo "Container not running or doesn't exist"
      - docker rmi {{.IMAGE_NAME}} || echo "Image already removed or doesn't exist"

  load-image-mk8s:
    desc: Load the .rock image into microk8s registry
    cmds:
      - |
        rockcraft.skopeo --insecure-policy copy --dest-tls-verify=false \
          oci-archive:{{.ROCK_NAME}} \
          docker://localhost:32000/{{.IMAGE_NAME}}

  deploy-worker-charm:
    desc: Deploy the temporal-worker-k8s charm using the rock as resource
    cmds:
      - |
        juju deploy temporal-worker-k8s {{.APP_NAME}} \
          --resource temporal-worker-image=localhost:32000/{{.IMAGE_NAME}}

  configure-worker-charm:
    desc: Configure the temporal-worker-k8s charm. This is specific to the microk8s juju setup.
    cmds:
      - |
        juju config {{.APP_NAME}} \
          host="temporal-k8s.temporal-model:7233" \ 
          queue="example-workflow-queue" \
          namespace="default"

  follow-charm-logs:
    desc: Follow the logs of the worker charm
    cmds:
      - microk8s kubectl -n worker-model logs {{.APP_NAME}}-0 -c temporal-worker
